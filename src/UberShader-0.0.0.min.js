Kiwi.Plugins.UberShader={name:"UberShader",version:"0.0.0",minimumKiwiVersion:"1.1.0",pluginDependencies:[{name:"MultiTexture",minimumVersion:"1.0.0"}]},Kiwi.PluginManager.register(Kiwi.Plugins.UberShader),Kiwi.Renderers.UberShaderRenderer=function(a,b,c){Kiwi.Renderers.TextureAtlasRenderer.call(this,a,b,c),this.setShaderPair("UberShader");var d=11;this._vertexBuffer=new Kiwi.Renderers.GLArrayBuffer(a,d),this.lightDir=[3,2,1],this.lightCol=[1,.8,.5],this.transform=null},Kiwi.extend(Kiwi.Renderers.UberShaderRenderer,Kiwi.Renderers.TextureAtlasRenderer),Kiwi.Renderers.UberShaderRenderer.prototype.enable=function(a,b){this.shaderPair=this.shaderManager.requestShader(a,this._shaderPairName,!0),a.uniform1i(this.shaderPair.uniforms.uSamplerDiff.location,0),a.uniform1i(this.shaderPair.uniforms.uSamplerNorm.location,1),a.uniform2fv(this.shaderPair.uniforms.uResolution.location,b.stageResolution),a.uniformMatrix3fv(this.shaderPair.uniforms.uCamMatrix.location,!1,b.camMatrix);var c=new Float32Array(this.lightDir);a.uniform3fv(this.shaderPair.uniforms.uLightDirection.location,c),a.uniform3fv(this.shaderPair.uniforms.uLightCol.location,this.lightCol)},Kiwi.Renderers.UberShaderRenderer.prototype.addToBatch=function(a,b){if(!(b.alpha<=0)){var c=b.transform,d=c.getConcatenatedMatrix(),e=b.atlas.cells[b.cellIndex],f=new Kiwi.Geom.Point(0-c.rotPointX,0-c.rotPointY),g=new Kiwi.Geom.Point(e.w-c.rotPointX,0-c.rotPointY),h=new Kiwi.Geom.Point(e.w-c.rotPointX,e.h-c.rotPointY),i=new Kiwi.Geom.Point(0-c.rotPointX,e.h-c.rotPointY);f=d.transformPoint(f),g=d.transformPoint(g),h=d.transformPoint(h),i=d.transformPoint(i),this._vertexBuffer.items.push(f.x,f.y,e.x,e.y,b.alpha,d.tx,d.ty,d.a,d.b,d.c,d.d,g.x,g.y,e.x+e.w,e.y,b.alpha,d.tx,d.ty,d.a,d.b,d.c,d.d,h.x,h.y,e.x+e.w,e.y+e.h,b.alpha,d.tx,d.ty,d.a,d.b,d.c,d.d,i.x,i.y,e.x,e.y+e.h,b.alpha,d.tx,d.ty,d.a,d.b,d.c,d.d)}},Kiwi.Renderers.UberShaderRenderer.prototype.draw=function(a){var b=11,c=4*b,d=0;this._vertexBuffer.uploadBuffer(a,this._vertexBuffer.items),a.enableVertexAttribArray(this.shaderPair.attributes.aXYUV),a.vertexAttribPointer(this.shaderPair.attributes.aXYUV,4,a.FLOAT,!1,c,4*d),d+=4,a.enableVertexAttribArray(this.shaderPair.attributes.aAlphaMtXY),a.vertexAttribPointer(this.shaderPair.attributes.aAlphaMtXY,3,a.FLOAT,!1,c,4*d),d+=3,a.enableVertexAttribArray(this.shaderPair.attributes.aMtABCD),a.vertexAttribPointer(this.shaderPair.attributes.aMtABCD,4,a.FLOAT,!1,c,4*d),d+=4,a.bindBuffer(a.ELEMENT_ARRAY_BUFFER,this._indexBuffer.buffer),a.drawElements(a.TRIANGLES,this._vertexBuffer.items.length/c*6,a.UNSIGNED_SHORT,0)},Kiwi.Shaders.UberShader=function(){Kiwi.Shaders.TextureAtlasShader.call(this),this.uniforms={uCamMatrix:{type:"mat3"},uResolution:{type:"2fv"},uTextureSize:{type:"2fv"},uSamplerDiff:{type:"1i"},uSamplerNorm:{type:"1i"},uLightDirection:{type:"3fv"},uLightCol:{type:"3fv"}},this.vertSource=["attribute vec4 aXYUV;","attribute vec3 aAlphaMtXY;","attribute vec4 aMtABCD;","uniform mat3 uCamMatrix;","uniform vec2 uResolution;","uniform vec2 uTextureSize;","uniform vec3 uLightDirection;","varying vec2 vTextureCoord;","varying float vAlpha;","varying vec3 vInverseLightDirection;","varying mat3 vSpriteTransform;","void main(void) {","  vec2 pos = (uCamMatrix * vec3(aXYUV.xy,1)).xy; ","  gl_Position = vec4((pos / uResolution * 2.0 - 1.0) * vec2(1, -1), 0, 1);","  vTextureCoord = aXYUV.zw / uTextureSize;","  vAlpha = aAlphaMtXY.x;","  vInverseLightDirection = -normalize(uLightDirection.xyz);","  vSpriteTransform = mat3(aMtABCD.x, aMtABCD.y, 0, aMtABCD.z, aMtABCD.w, 0, aAlphaMtXY.y, aAlphaMtXY.z, 1);","}"],this.fragSource=["precision mediump float;","varying vec2 vTextureCoord;","varying float vAlpha;","varying vec3 vInverseLightDirection;","varying mat3 vSpriteTransform;","uniform sampler2D uSamplerDiff;","uniform sampler2D uSamplerNorm;","uniform vec3 uLightCol;","/* Normal Map Constants */","const vec3 eyeVec = vec3(0.0, 0.0, 1.0);","void main(void) {","  vec4 col = texture2D(uSamplerDiff, vTextureCoord.xy);","  vec4 norm = texture2D(uSamplerNorm, vTextureCoord.xy) * 2.0 - 1.0;","  float normLength = length(norm.xy);","  norm.xy = (vec3(norm.xy, 1) * vSpriteTransform).xy;","  float normLengthNew = length(norm.xy);","  norm.xy *= normLength / normLengthNew;","  vec3 reflectionDirection = reflect(vInverseLightDirection, norm.xyz);","  float diff = max( dot( reflectionDirection, eyeVec ), 0.0 );","  gl_FragColor = col * diff;","  gl_FragColor.rgb *= uLightCol;","  // Apply final alpha","  gl_FragColor.a = col.a * vAlpha;","}"]},Kiwi.extend(Kiwi.Shaders.UberShader,Kiwi.Shaders.TextureAtlasShader),Kiwi.Shaders.UberShader.prototype.init=function(a){Kiwi.Shaders.ShaderPair.prototype.init.call(this,a),this.attributes.aXYUV=a.getAttribLocation(this.shaderProgram,"aXYUV"),this.attributes.aAlphaMtXY=a.getAttribLocation(this.shaderProgram,"aAlphaMtXY"),this.attributes.aMtABCD=a.getAttribLocation(this.shaderProgram,"aMtABCD"),this.initUniforms(a)};