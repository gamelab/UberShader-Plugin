Kiwi.Plugins.UberShader={name:"UberShader",version:"1.0.0",minimumKiwiVersion:"1.1.1",pluginDependencies:[{name:"MultiTexture",minimumVersion:"1.0.0"}]},Kiwi.PluginManager.register(Kiwi.Plugins.UberShader),Kiwi.Renderers.UberShaderRenderer=function(a,b,c){Kiwi.Renderers.TextureAtlasRenderer.call(this,a,b,c),this.setShaderPair("UberShader"),this.bufferItemSize=22,this._vertexBuffer=new Kiwi.Renderers.GLArrayBuffer(a,this.bufferItemSize),this.game=null,this.numLights=5,this.maxExponent=32,this.specularIntensity=1,this.gamma=1.2,this.sphereDeviation=.05,this.stageTransform={offsetX:0,offsetY:0,scaleX:1,scaleY:1},this.lights=[];for(var d=0;d<this.numLights;d++){var e={lightPosition:[0,0,0],lightColor:[1,1,1],lightIntensity:0,lightFalloff:2};this.lights.push(e)}},Kiwi.extend(Kiwi.Renderers.UberShaderRenderer,Kiwi.Renderers.TextureAtlasRenderer),Kiwi.Renderers.UberShaderRenderer.prototype.enable=function(a,b){if(this.shaderPair=this.shaderManager.requestShader(a,this._shaderPairName,!0),a.uniform1i(this.shaderPair.uniforms.uSamplerDiff.location,0),a.uniform1i(this.shaderPair.uniforms.uSamplerNorm.location,1),a.uniform1i(this.shaderPair.uniforms.uSamplerSpec.location,2),a.uniform1i(this.shaderPair.uniforms.uSamplerEmit.location,3),a.uniform1i(this.shaderPair.uniforms.uSamplerTints.location,4),a.uniform1i(this.shaderPair.uniforms.uSamplerIrradiance.location,5),a.uniform1i(this.shaderPair.uniforms.uSamplerReflect.location,6),null!==this.game&&this.game.deviceTargetOption==Kiwi.TARGET_COCOON){var c=new Kiwi.Geom.Point(0,0),d=window.innerWidth,e=window.innerHeight;switch(this.game.stage.scaleType){case Kiwi.Stage.SCALE_FIT:var f=this.game.stage.width/this.game.stage.height,g=d/e;if(g>f){var h=e*f;c.x=(d-h)/2,d=h}else{var i=d/f;c.y=(e-i)/2,e=i}break;case Kiwi.Stage.SCALE_STRETCH:break;case Kiwi.Stage.SCALE_NONE:d=this._game.stage.width,e=this._game.stage.height}this.stageTransform.offsetX=c.x,this.stageTransform.offsetY=c.y,this.stageTransform.scaleX=this.game.stage.width/d,this.stageTransform.scaleY=this.game.stage.height/e}var j=new Float32Array([this.stageTransform.scaleX,this.stageTransform.scaleY,1]);a.uniform3fv(this.shaderPair.uniforms.uStageScaler.location,j),a.uniform1f(this.shaderPair.uniforms.uMaxSpecularExponent.location,this.maxExponent),a.uniform1f(this.shaderPair.uniforms.uSpecularIntensity.location,this.specularIntensity);for(var k=[],l=[],m=null!==this.game?this.game.stage.height:600,n=0;n<this.lights.length;n++){var o=new Kiwi.Geom.Matrix(b.camMatrix[0],b.camMatrix[1],b.camMatrix[3],b.camMatrix[4],b.camMatrix[6],b.camMatrix[7]),p=o.transformPoint(new Kiwi.Geom.Point(this.lights[n].lightPosition[0],this.lights[n].lightPosition[1]));k.push(this.stageTransform.offsetX*this.stageTransform.scaleX+p.x),k.push(this.stageTransform.offsetY*this.stageTransform.scaleY+(m-p.y)),k.push(this.lights[n].lightPosition[2]),k.push(this.lights[n].lightFalloff),l.push(this.lights[n].lightColor[0]),l.push(this.lights[n].lightColor[1]),l.push(this.lights[n].lightColor[2]),l.push(this.lights[n].lightIntensity)}a.uniform4fv(this.shaderPair.uniforms.uLightPosition.location,new Float32Array(k)),a.uniform4fv(this.shaderPair.uniforms.uLightCol.location,new Float32Array(l)),a.uniform2fv(this.shaderPair.uniforms.uResolution.location,b.stageResolution),a.uniformMatrix3fv(this.shaderPair.uniforms.uCamMatrix.location,!1,b.camMatrix),a.uniform1f(this.shaderPair.uniforms.uGamma.location,this.gamma),a.uniform1f(this.shaderPair.uniforms.uSphereDeviation.location,this.sphereDeviation)},Kiwi.Renderers.UberShaderRenderer.prototype.addToBatch=function(a,b){if(!(b.alpha<=0)){var c=b.transform,d=c.getConcatenatedMatrix(),e=b.atlas.cells[b.cellIndex],f=new Kiwi.Geom.Point(0-c.rotPointX,0-c.rotPointY),g=new Kiwi.Geom.Point(e.w-c.rotPointX,0-c.rotPointY),h=new Kiwi.Geom.Point(e.w-c.rotPointX,e.h-c.rotPointY),i=new Kiwi.Geom.Point(0-c.rotPointX,e.h-c.rotPointY);f=d.transformPoint(f),g=d.transformPoint(g),h=d.transformPoint(h),i=d.transformPoint(i);var j=[1,0,0,0],k=[0,1,0,0],l=[0,0,1,0];b.uberTints&&(j=b.uberTints.tint1,k=b.uberTints.tint2,l=b.uberTints.tint3);var m=.5;b.uberEmit&&(m=.5*b.uberEmit+.5),this._vertexBuffer.items.push(f.x,f.y,e.x,e.y,b.alpha,m,d.a,d.b,d.c,d.d,j[0],j[1],j[2],j[3],k[0],k[1],k[2],k[3],l[0],l[1],l[2],l[3],g.x,g.y,e.x+e.w,e.y,b.alpha,m,d.a,d.b,d.c,d.d,j[0],j[1],j[2],j[3],k[0],k[1],k[2],k[3],l[0],l[1],l[2],l[3],h.x,h.y,e.x+e.w,e.y+e.h,b.alpha,m,d.a,d.b,d.c,d.d,j[0],j[1],j[2],j[3],k[0],k[1],k[2],k[3],l[0],l[1],l[2],l[3],i.x,i.y,e.x,e.y+e.h,b.alpha,m,d.a,d.b,d.c,d.d,j[0],j[1],j[2],j[3],k[0],k[1],k[2],k[3],l[0],l[1],l[2],l[3])}},Kiwi.Renderers.UberShaderRenderer.prototype.draw=function(a){var b=4*this.bufferItemSize,c=0;this._vertexBuffer.uploadBuffer(a,this._vertexBuffer.items),a.enableVertexAttribArray(this.shaderPair.attributes.aXYUV),a.vertexAttribPointer(this.shaderPair.attributes.aXYUV,4,a.FLOAT,!1,b,4*c),c+=4,a.enableVertexAttribArray(this.shaderPair.attributes.aAlphaEmit),a.vertexAttribPointer(this.shaderPair.attributes.aAlphaEmit,2,a.FLOAT,!1,b,4*c),c+=2,a.enableVertexAttribArray(this.shaderPair.attributes.aMtABCD),a.vertexAttribPointer(this.shaderPair.attributes.aMtABCD,4,a.FLOAT,!1,b,4*c),c+=4,a.enableVertexAttribArray(this.shaderPair.attributes.aTintCol1),a.vertexAttribPointer(this.shaderPair.attributes.aTintCol1,4,a.FLOAT,!1,b,4*c),c+=4,a.enableVertexAttribArray(this.shaderPair.attributes.aTintCol2),a.vertexAttribPointer(this.shaderPair.attributes.aTintCol2,4,a.FLOAT,!1,b,4*c),c+=4,a.enableVertexAttribArray(this.shaderPair.attributes.aTintCol3),a.vertexAttribPointer(this.shaderPair.attributes.aTintCol3,4,a.FLOAT,!1,b,4*c),c+=4,a.bindBuffer(a.ELEMENT_ARRAY_BUFFER,this._indexBuffer.buffer),a.drawElements(a.TRIANGLES,this._vertexBuffer.items.length/b*6,a.UNSIGNED_SHORT,0)},Kiwi.Shaders.UberShader=function(){Kiwi.Shaders.TextureAtlasShader.call(this),this.uniforms={uCamMatrix:{type:"mat3"},uResolution:{type:"2fv"},uTextureSize:{type:"2fv"},uSamplerDiff:{type:"1i"},uSamplerNorm:{type:"1i"},uSamplerSpec:{type:"1i"},uSamplerIrradiance:{type:"1i"},uSamplerReflect:{type:"1i"},uSamplerEmit:{type:"1i"},uSamplerTints:{type:"1i"},uLightPosition:{type:"4fv"},uLightCol:{type:"4fv"},uSpecularIntensity:{type:"1f"},uMaxSpecularExponent:{type:"1f"},uStageScaler:{type:"3fv"},uGamma:{type:"1f"},uSphereDeviation:{type:"1f"}},this.vertSource=["precision highp float;","attribute vec4 aXYUV;","attribute vec2 aAlphaEmit;","attribute vec4 aMtABCD;","attribute vec4 aTintCol1;","attribute vec4 aTintCol2;","attribute vec4 aTintCol3;","uniform mat3 uCamMatrix;","uniform vec2 uResolution;","uniform vec2 uTextureSize;","varying vec4 vTextureCoordAndHalfResolution;","varying vec4 vSpriteTransformScreenPack;","varying vec4 vSpriteTransformWorldPack;","varying vec4 vTintCol1;","varying vec4 vTintCol2;","varying vec4 vTintCol3;","varying vec2 vAlphaAndEmitStrength;","void main(void) {","  vec2 pos = (uCamMatrix * vec3(aXYUV.xy,1)).xy; ","  gl_Position = vec4((pos / uResolution * 2.0 - 1.0) * vec2(1.0, -1.0), 0.0, 1.0);","  vTextureCoordAndHalfResolution = vec4( aXYUV.zw / uTextureSize, uResolution * 0.5);","  mat3 vSpriteTransformScreen = mat3(aMtABCD.x, aMtABCD.y, 0.0, aMtABCD.z, aMtABCD.w, 0.0, 0.0, 0.0, 1.0) * uCamMatrix;","  vSpriteTransformScreenPack = vec4( vSpriteTransformScreen[0][0], vSpriteTransformScreen[1][0], vSpriteTransformScreen[0][1], vSpriteTransformScreen[1][1] );","  vSpriteTransformWorldPack = vec4( aMtABCD.x, aMtABCD.y, aMtABCD.z, aMtABCD.w );","  vTintCol1 = aTintCol1;","  vTintCol2 = aTintCol2;","  vTintCol3 = aTintCol3;","  vAlphaAndEmitStrength = aAlphaEmit;","}"],this.fragSource=["precision highp float;","varying vec4 vTextureCoordAndHalfResolution;","varying vec4 vSpriteTransformScreenPack;","varying vec4 vSpriteTransformWorldPack;","varying vec4 vTintCol1;","varying vec4 vTintCol2;","varying vec4 vTintCol3;","varying vec2 vAlphaAndEmitStrength;","uniform sampler2D uSamplerDiff;","uniform sampler2D uSamplerNorm;","uniform sampler2D uSamplerSpec;","uniform sampler2D uSamplerIrradiance;","uniform sampler2D uSamplerReflect;","uniform sampler2D uSamplerEmit;","uniform sampler2D uSamplerTints;","uniform vec4 uLightPosition[5];","uniform vec4 uLightCol[5];","uniform vec3 uStageScaler;","uniform float uMaxSpecularExponent;","uniform float uSpecularIntensity;","uniform float uGamma;","uniform float uSphereDeviation;","const vec3 eyeVec = vec3(0.0, 0.0, 1.0);","void main(void) {","  vec3 fragCoord = gl_FragCoord.xyz * uStageScaler.xyz;","  lowp vec4 col = texture2D(uSamplerDiff, vTextureCoordAndHalfResolution.xy);","  lowp vec4 norm = texture2D(uSamplerNorm, vTextureCoordAndHalfResolution.xy);","  lowp vec4 spec = texture2D(uSamplerSpec, vTextureCoordAndHalfResolution.xy);","  lowp vec4 emit = texture2D(uSamplerEmit, vTextureCoordAndHalfResolution.xy);","  lowp vec4 tint = texture2D(uSamplerTints, vTextureCoordAndHalfResolution.xy);","  col.rgb = mix(mix(mix(col.rgb, vTintCol1.rgb, tint.r), vTintCol2.rgb, tint.g), vTintCol3.rgb, tint.b);","  spec.rgb = mix(mix(mix(spec.rgb, vTintCol1.rgb, tint.r * vTintCol1.a), vTintCol2.rgb, tint.g * vTintCol2.a), vTintCol3.rgb, tint.b * vTintCol3.a);","  norm.xyz = norm.xyz * 2.0 - 1.0;","  mediump float normLength = length(norm.xy);","  lowp vec3 normWorld = norm.xyz;","  norm.y *= -1.0;","  normWorld.xy = (vec3(normWorld.xy, 1.0) * mat3( vSpriteTransformWorldPack.x, vSpriteTransformWorldPack.y, 0.0, vSpriteTransformWorldPack.z, vSpriteTransformWorldPack.w, 0.0, 0.0, 0.0, 1.0 ) ).xy;","  norm.xy = (vec3(norm.xy, 1.0) * mat3( vSpriteTransformScreenPack.x, vSpriteTransformScreenPack.y, 0.0, vSpriteTransformScreenPack.z, vSpriteTransformScreenPack.w, 0.0, 0.0, 0.0, 1.0 ) ).xy;","  norm.xy *= normLength / length(norm.xy);","  norm.xyz = normalize(norm.xyz);","  norm.y *= -1.0;","  normWorld.xy *= normLength / length(normWorld.xy);","  normWorld = normalize(normWorld);","  normWorld.xy = sin( asin( normWorld.xy ) + asin( vec2( (fragCoord.x - vTextureCoordAndHalfResolution.z) / vTextureCoordAndHalfResolution.z, (fragCoord.y - vTextureCoordAndHalfResolution.w) / vTextureCoordAndHalfResolution.w ) ) * uSphereDeviation );","  normWorld = normalize(normWorld);","  vec2 refLook = normWorld.xy * vec2(0.5, -0.5) + 0.5;","  lowp vec3 diffSum = texture2D(uSamplerIrradiance, refLook.xy).rgb;","  lowp vec3 specSum = vec3(0.0);","  mediump float fragmentSpecularExponent = norm.a * uMaxSpecularExponent;","  vec3 lightDir = vec3(0.0);","  mediump float lightIntensity = 0.0;","  lowp vec3 lightContribution = vec3(0.0);","  mediump vec3 reflectionDirection = vec3(0.0);","  for(int i = 0; i < 5;  i++) {","    lightDir = fragCoord.xyz - uLightPosition[i].xyz;","    lightIntensity = pow(uLightCol[i].w / length(lightDir), uLightPosition[i].w);","    lightContribution = uLightCol[i].rgb * lightIntensity;","    reflectionDirection = reflect( normalize( lightDir ), norm.xyz );","    diffSum += lightContribution * max( dot( reflectionDirection, norm.xyz ), 0.0 );","    specSum += lightContribution * pow(max( dot( reflectionDirection, eyeVec ), 0.0 ), fragmentSpecularExponent);","  }","  gl_FragColor = vec4(","    pow( ","    col.rgb * diffSum * col.a","    + spec.rgb * (specSum * spec.a * uSpecularIntensity + texture2D(uSamplerReflect, refLook.xy).rgb)","    + emit.rgb * (0.5 + 0.5 * cos( (emit.a + vAlphaAndEmitStrength.y) * 6.283) )","    , vec3(uGamma) ),","    min(col.a + spec.a, 1.0) * vAlphaAndEmitStrength.x","  );","}"]},Kiwi.extend(Kiwi.Shaders.UberShader,Kiwi.Shaders.TextureAtlasShader),Kiwi.Shaders.UberShader.prototype.init=function(a){Kiwi.Shaders.ShaderPair.prototype.init.call(this,a),this.attributes.aXYUV=a.getAttribLocation(this.shaderProgram,"aXYUV"),this.attributes.aAlphaEmit=a.getAttribLocation(this.shaderProgram,"aAlphaEmit"),this.attributes.aMtABCD=a.getAttribLocation(this.shaderProgram,"aMtABCD"),this.attributes.aTintCol1=a.getAttribLocation(this.shaderProgram,"aTintCol1"),this.attributes.aTintCol2=a.getAttribLocation(this.shaderProgram,"aTintCol2"),this.attributes.aTintCol3=a.getAttribLocation(this.shaderProgram,"aTintCol3"),this.initUniforms(a)};